{"version":3,"sources":["webpack:///webpack/bootstrap a542f8fb3983899cc350","webpack:///./src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/utils.js","webpack:///./src/locales ^\\.\\/.*\\.js$","webpack:///./src/locales/en-US.js","webpack:///./src/locales/ru.js"],"names":[],"mappings":"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","file":"excel-style-dataformatter.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a542f8fb3983899cc350\n **/","import { Code } from './utils';\n\nconst defaultLocale = 'en-US';\n\nclass DataFormatter {\n\n  /**\n   * Constructor\n   * Available options are:\n   *   debug {boolean} - enable debug mode\n   *   UTCOffset {number|null} - UTC offset in minutes for dates\n   *   locale {string}\n   *   transformCode {function} - code transformer\n   * @param {object} options\n   */\n  constructor({\n    debug = false,\n    UTCOffset = null,\n    locale = defaultLocale,\n    transformCode = (code)=> code\n  } = {}) {\n\n    this.memoized = {};\n    this.debug = debug;\n    this.UTCOffset = UTCOffset;\n    this.transformCode = transformCode;\n    this.zeroDate = this.createDate('1899-12-31T00:00:00.000');\n\n    this.setLocale(locale);\n  }\n\n  /**\n   * Resets memoized pattern functions\n   */\n  clearMemoizedFunctions() {\n    this.memoized = {};\n  }\n\n  /**\n   * Sets locale\n   * If locale doesn't exist, sets default\n   * @param {string} locale\n   */\n  setLocale(locale) {\n    let localeData = require('./locales/' + locale + '.js');\n    if (!localeData) {\n      localeData = require('./locales/' + defaultLocale + '.js');\n    }\n    this.locale = localeData.default;\n    this.clearMemoizedFunctions();\n  }\n\n  /**\n   * Sets UTC offset for dates\n   * @param {number|null} UTCOffset in minutes\n   */\n  setUTCOffset(UTCOffset) {\n    this.UTCOffset = UTCOffset;\n  }\n\n  /**\n   * Creates new date instance\n   */\n  createDate() {\n    let date = new Date(...arguments);\n\n    if (this.UTCOffset !== null) {\n      let clientOffset = date.getTimezoneOffset();\n      let newOffset = this.UTCOffset + clientOffset;\n      let newOffsetMs = newOffset * 60 * 1000;\n\n      date.setTime(date.getTime() + newOffsetMs);\n    }\n\n    return date;\n  }\n\n  /**\n   * Logger\n   */\n  log(message) {\n    if (this.debug) {\n      console.log(message);\n    }\n  }\n\n  /**\n   * Greatest common divisor\n   */\n  gcd(a, b) {\n    let r;\n    while (b) {\n      r = a % b;\n      a = b;\n      b = r;\n    }\n    return a;\n  }\n\n  applyNumberPattern(n, pattern, direction) {\n    n = n.toString();\n    let s = '';\n\n    if (direction === 'right') {\n      let j = 0;\n      let i = -1;\n      let patLen = pattern.length\n\n      while (++i < patLen) {\n        switch (pattern[i]) {\n          case '0':\n            s += n[j] || '0';\n            j++;\n            break;\n          case '#':\n            s += n[j] || '';\n            j++;\n            break;\n          case '?':\n            s += n[j] || ' ';\n            j++;\n            break;\n          case '[':\n            while (i < pattern.length && pattern[i] !== ']') {\n              s += pattern[i];\n              i++;\n            }\n            i--;\n            break;\n          default:\n            s += pattern[i];\n        }\n      }\n    }\n    else {\n      // Should separate thousands\n      let separateThousands = false;\n      let mostLeftDigit;\n\n      pattern = pattern.replace(/(0|#|\\?)(,+?)(0|#|\\?)/g, (a, m1, m2, m3)=> {\n        separateThousands = true;\n        return m1 + m3;\n      });\n\n      // Add separation\n      if (separateThousands) {\n        let j = n.length - 3;\n        while ((n[0] === '-' ? j > 1 : j > 0)) {\n          n = n.substr(0, j) + this.locale.thousandSeparator + n.substr(j);\n          j -= 3;\n        }\n      }\n\n      let j = n.length - 1;\n      let i = pattern.length;\n\n      while (i--) {\n        switch (pattern[i]) {\n          case '0':\n            s = (n[j] || '0') + s;\n            mostLeftDigit = i;\n            j--;\n            break;\n          case '#':\n            s = (n[j] || '') + s;\n            mostLeftDigit = i;\n            j--;\n            break;\n          case '?':\n            s = (n[j] || ' ') + s;\n            mostLeftDigit = i;\n            j--;\n            break;\n          case ']':\n            while (i > 0 && pattern[i] !== '[') {\n              s = pattern[i] + s;\n              i--;\n            }\n            i++;\n            break;\n          default:\n            s = pattern[i] + s;\n        }\n      }\n      // Add remaining digits, example: n=1234, ptrn=00, result must be 1234 instead of 34\n      if (j >= 0 && mostLeftDigit !== null) {\n        s = s.substr(0, mostLeftDigit) +\n            n.substr(0, j + 1) +\n            s.substr(mostLeftDigit);\n      }\n    }\n\n    return s;\n  }\n\n  restoreOrigins(value, origins) {\n    return value.toString().replace(/\\[(?:(\\$*?)|(.*?))\\]/g, (a, m1)=>\n      m1 && origins[m1.length - 1] || a\n    );\n  }\n\n  formatAsNumberDecimal(n, decimals, patternIntegerPart, patternDecimalPart) {\n\n    n = n.toFixed(decimals).toString().split('.');\n    let integerPart = parseInt(n[0]);\n    let decimalPart = parseInt(n[1] || 0);\n\n    return this.applyNumberPattern(integerPart, patternIntegerPart) +\n      this.locale.decimalSeparator +\n      this.applyNumberPattern(decimalPart, patternDecimalPart, 'right');\n  }\n\n  formatAsNumberFractial(n, patternNumeratorPart, patternDenominatorPart) {\n    let m = n.toString().split(\".\");\n    m = m[1] ? Math.pow(10, m[1].length) : 1;\n    n = Math.floor(n * m);\n\n    let factor = this.gcd(n, m);\n\n    return this.applyNumberPattern(n / factor, patternNumeratorPart) +\n      '/' +\n      this.applyNumberPattern(m / factor, patternDenominatorPart);\n  }\n\n  formatAsNumberFractialMixed(n, leftPatternNumeratorPart, rightPatternNumeratorPart, patternDenominatorPart) {\n    let f = 0;\n    let c = 1;\n    let factor = 1;\n    let m = n.toString().split('.');\n\n    if (m[1]) {\n      c = Math.pow(10, m[1].length);\n      f = parseInt(m[1]);\n      factor = this.gcd(f, c);\n    }\n\n    return this.applyNumberPattern(Math.floor(n), leftPatternNumeratorPart) +\n      this.applyNumberPattern(f / factor, rightPatternNumeratorPart) +\n      '/' +\n      this.applyNumberPattern(c / factor, patternDenominatorPart);\n  }\n\n  formatAsNumberExponential(n, integerPart, decimalPart, patternIntegerPart, patternDecimalPart, patternPowPart) {\n\n    let sign = n < 0 ? -1 : 1;\n    let pow = 0;\n\n    if (n !== 0) {\n\n      n = Math.abs(n);\n\n      let integerPartDivision = Math.pow(10, integerPart);\n\n      while(n < integerPartDivision || n.toFixed(decimalPart) < integerPartDivision){\n        n *= 10;\n        pow ++;\n      }\n\n      while(n >= integerPartDivision || n.toFixed(decimalPart) >= integerPartDivision){\n        n /= 10;\n        pow --;\n      }\n\n    }\n\n    n = (n * sign).toFixed(decimalPart).toString().split('.');\n\n    // Build res\n    let res = '';\n\n    // Integer part\n    res += this.applyNumberPattern(parseInt(n[0]), patternIntegerPart);\n\n    // Decimal part\n    if (patternDecimalPart) {\n      res += this.locale.decimalSeparator +\n        this.applyNumberPattern(parseInt(n[1]), patternDecimalPart, 'right');\n    }\n\n    // Pow part\n    res += 'E' +\n      (pow > 0 ? '-' : '+') +\n      this.applyNumberPattern(Math.abs(pow), patternPowPart);\n\n    return res;\n  }\n\n  formatAsDateTimeElapsed(n, foundDays, foundHours, foundMinutes, pattern) {\n\n    n = Math.abs(n.getTime() - this.zeroDate.getTime());\n\n    let seconds = parseInt(n / 1000);\n    let minutes = parseInt(seconds / 60);\n    let hours = parseInt(minutes / 60);\n    let days = parseInt(hours / 24);\n\n    hours = foundDays ? hours % 24 : hours;\n    minutes = foundHours ? minutes % 60 : minutes;\n    seconds = foundMinutes ? seconds % 60 : seconds;\n\n    return pattern.replace(/(dd)|(d)|(hh)|(h)|(mm)|(m)|(ss)|(s)/gi, (a, dd, d, hh, h, mm, m, ss, s)=> {\n\n      if (dd) {\n        return this.applyNumberPattern(days, '00');\n      }\n\n      if (d) {\n        return days;\n      }\n\n      if (hh) {\n        return this.applyNumberPattern(hours, '00');\n      }\n\n      if (h) {\n        return hours;\n      }\n\n      if (mm) {\n        return this.applyNumberPattern(minutes, '00');\n      }\n\n      if (m) {\n        return minutes;\n      }\n\n      if (ss) {\n        return this.applyNumberPattern(seconds, '00');\n      }\n\n      if (s) {\n        return seconds;\n      }\n\n      return '';\n    });\n  }\n\n  formatAsDateTimeNormal(n, pattern) {\n    let { days, daysShort, months, monthsShort } = this.locale;\n    let foundAMPM = false;\n\n    let year = n.getFullYear();\n    let month = n.getMonth();\n    let date = n.getDate();\n    let weekDay = n.getDay();\n    let hours = n.getHours();\n    let minutes = n.getMinutes();\n    let seconds = n.getSeconds();\n\n    // Build res\n    let res = pattern.replace(/((?:am\\/pm)|(?:a\\/p))|(?:(h[^ydsap]*?)mm)|(?:mm([^ydh]*?s))|(?:(h[^ydsap]*?)m)|(?:m([^ydh]*?s))/gi, (a, ampm, fmin, fmin2, mmin, mmin2)=> {\n\n      if (ampm) {\n        foundAMPM = true;\n        return '[]';\n      }\n\n      if (fmin) {\n        return fmin + this.applyNumberPattern(minutes, '00');\n      }\n\n      if (fmin2) {\n        return this.applyNumberPattern(minutes, '00') + fmin2;\n      }\n\n      if (mmin) {\n        return mmin + minutes;\n      }\n\n      if (mmin2) {\n        return minutes + mmin2;\n      }\n\n      return '';\n    });\n\n    return res.replace(/(ss)|(s)|(hh)|(h)|(dddd)|(ddd)|(dd)|(d)|(mmmmm)|(mmmm)|(mmm)|(mm)|(m)|(yyyy)|(yy)|(\\[\\])/gi, (a, ss, s, hh, h, dddd, ddd, dd, d, mmmmm, mmmm, mmm, mm, m, yyyy, yy, ampm)=> {\n\n      if (ss) {\n        return this.applyNumberPattern(seconds, '00');\n      }\n\n      if (s) {\n        return seconds;\n      }\n\n      if (hh) {\n        return this.applyNumberPattern(foundAMPM ? hours % 12 : hours, '00');\n      }\n\n      if (h) {\n        return foundAMPM ? hours % 12 : hours;\n      }\n\n      if (dddd) {\n        return days[weekDay];\n      }\n\n      if (ddd) {\n        return daysShort[weekDay];\n      }\n\n      if (dd) {\n        return this.applyNumberPattern(date, '00');\n      }\n\n      if (d) {\n        return date;\n      }\n\n      if (mmmmm) {\n        return monthsShort[month][0];\n      }\n\n      if (mmmm) {\n        return months[month];\n      }\n\n      if (mmm) {\n        return monthsShort[month];\n      }\n\n      if (mm) {\n        return this.applyNumberPattern(month + 1, '00');\n      }\n\n      if (m) {\n        return month + 1;\n      }\n\n      if (yyyy) {\n        return year;\n      }\n\n      if (yy) {\n        return year.toString().substr(2);\n      }\n\n      if (ampm) {\n        return hours < 12 ? 'AM' : 'PM';\n      }\n\n      return '';\n    });\n  }\n\n  createTextCode(section) {\n    let code = new Code();\n\n    code.append(`\n      result.value = {0}.replace(/@/, n);\n    `, section);\n\n    return code.toString();\n  }\n\n  createGeneralCode() {\n    let code = new Code();\n    let numberCode = this.createNumberCode('#.00');\n    let dateTimeCode = this.createDateTimeCode('[d]');\n\n    code.append(`\n      if (type === \"Number\") {\n        ${numberCode}\n      }\n      if (type === \"DateTime\") {\n        ${dateTimeCode}\n      }\n    `);\n\n    return code.toString();\n  }\n\n  createNumberExponentialCode(exponentialMatch) {\n    let patternIntegerPart = exponentialMatch[1];\n    let patternDecimalPart = exponentialMatch[2];\n    let patternPowPart = exponentialMatch[3];\n    let code = new Code();\n    let integerPart;\n    let decimalPart;\n\n    let zerosCount = (s)=> s.match(/0|\\?|#/g).length;\n\n    // Integer part\n    if (!patternIntegerPart) {\n      patternIntegerPart = '#';\n      integerPart = 1;\n    }\n    else {\n      integerPart = zerosCount(patternIntegerPart);\n    }\n\n    // Decimal part\n    if (!patternDecimalPart) {\n      patternDecimalPart = '';\n      decimalPart = 0;\n    }\n    else {\n      decimalPart = zerosCount(patternDecimalPart);\n    }\n\n    code.append(`\n      result.value = this.formatAsNumberExponential(n, {0}, {1}, {2}, {3}, {4});\n    `,\n      integerPart,\n      decimalPart,\n      patternIntegerPart,\n      patternDecimalPart,\n      patternPowPart\n    );\n\n    return code.toString();\n  }\n\n  createNumberFractialCode(fractialMatch) {\n    let code = new Code();\n    let patternNumeratorPart = fractialMatch[1] || '#';\n    let patternDenominatorPart = fractialMatch[2] || '#';\n    // TODO watch here\n    let zeroPos = patternNumeratorPart.length - 1;\n\n    while (\n      patternNumeratorPart[zeroPos] === '0' &&\n      patternNumeratorPart[zeroPos] !== '?' &&\n      patternNumeratorPart[zeroPos] !== '#' &&\n      patternNumeratorPart[zeroPos] !== ' ' &&\n      zeroPos > 0\n    ) {\n      zeroPos --;\n    }\n\n    let leftPatternNumeratorPart = patternNumeratorPart.substr(0, zeroPos);\n    let rightPatternNumeratorPart = patternNumeratorPart.substr(zeroPos);\n\n    if (!leftPatternNumeratorPart) {\n      code.append(`\n        result.value = this.formatAsNumberFractial(n, {0}, {1});\n      `,\n        rightPatternNumeratorPart,\n        patternDenominatorPart\n      );\n    }\n    // Mixed fraction\n    else {\n      code.append(`\n        result.value = this.formatAsNumberFractialMixed(n, {0}, {1}, {2});\n      `,\n        leftPatternNumeratorPart,\n        rightPatternNumeratorPart,\n        patternDenominatorPart\n      );\n    }\n\n    return code.toString();\n  }\n\n  createNumberDecimalCode(decimalMatch) {\n    let code = new Code();\n    let patternIntegerPart = decimalMatch[1] || '0';\n    let patternDecimalPart = decimalMatch[2] || '';\n    let decimals;\n    let factor = 1;\n\n    let zerosCount = (s)=> s.match(/0|\\?|#/g).length;\n\n    if (!patternDecimalPart) {\n      decimals = 0;\n    }\n    else {\n      decimals = zerosCount(patternDecimalPart);\n    }\n\n    // Spaces before .\n    patternIntegerPart = patternIntegerPart.replace(/(0|#|\\?)(,+)([^0?#]*)$/, (a, m1, m2, m3)=> {\n      factor *= Math.pow(1000, m2.length);\n      return m1 + m3;\n    });\n\n    if (factor !== 1) {\n      code.append(`\n        n /= {0};\n      `, factor);\n    }\n\n    code.append(`\n      result.value = this.formatAsNumberDecimal(n, {0}, {1}, {2});\n    `,\n      decimals,\n      patternIntegerPart,\n      patternDecimalPart\n    );\n\n    return code.toString();\n  }\n\n  createNumberIntegerCode(section) {\n    let code = new Code();\n\n    code.append(`\n      n = Math.round(n);\n      result.value = this.applyNumberPattern(n, {0});\n    `, section);\n\n    return code.toString();\n  }\n\n  createNumberCode(section, shouldAbsNumber) {\n    let numberCode = new Code();\n\n    // Abs\n    if (shouldAbsNumber) {\n      numberCode.append(`\n        n = Math.abs(n);\n      `);\n    }\n\n    // Exponential form regexp\n    let exponentialMatch = section.match(/(.*?)(?:\\.(.*?))?e(?:\\+|\\-)(.*)/i);\n\n    if (exponentialMatch) {\n\n      // Exponential form\n      numberCode.append(this.createNumberExponentialCode(exponentialMatch));\n\n    }\n    else {\n      let factor = 1;\n\n      // Spaces before end and decimal separator (.)\n      section = section.replace(/(0|#|\\?)(\\s+)([^0?#]*?)($|\\.)/, (a, m1, m2, m3, m4)=> {\n        factor *= Math.pow(1000, m2.length);\n        return m1 + m3 + m4;\n      });\n\n      // Percents\n      let percentMatch = section.match(/%/g);\n      if (percentMatch) {\n        factor /= Math.pow(100, percentMatch.length);\n      }\n\n      // Factor\n      if (factor !== 1) {\n        numberCode.append(`\n          n /= {0};\n        `, factor);\n      }\n\n      let fractialMatch;\n      let decimalMatch;\n\n      switch (true) {\n\n        // Fractial form\n        case !!(fractialMatch = section.match(/(.*?)\\/(.*)/)):\n          numberCode.append(this.createNumberFractialCode(fractialMatch));\n          break;\n\n        // Decimal form\n        case !!(decimalMatch = section.match(/(.*?)\\.(.*)/)):\n          numberCode.append(this.createNumberDecimalCode(decimalMatch));\n          break;\n\n        // Integer form\n        default:\n          numberCode.append(this.createNumberIntegerCode(section));\n\n      }\n    }\n\n    // Final code\n    let code = new Code();\n\n    // Parse to float\n    code.append(`\n      n = parseFloat(n);\n    `);\n\n    // Checks\n    code.append(`\n      if (!isNaN(n)) {\n        if (n >= 1e21 || n <= -1e21) {\n          result.value = n.toString().toUpperCase();\n        }\n        else {\n          ${numberCode}\n        }\n      }\n    `);\n\n    return code.toString();\n  }\n\n  createDateTimeElapsedCode(section) {\n    let code = new Code();\n\n    let foundDays = /d/i.test(section);\n    let foundHours = /h/i.test(section);\n    let foundMinutes = /m/i.test(section);\n\n    code.append(`\n      result.value = this.formatAsDateTimeElapsed(n, {0}, {1}, {2}, {3});\n    `,\n      foundDays,\n      foundHours,\n      foundMinutes,\n      section\n    );\n\n    return code.toString();\n  }\n\n  createDateTimeNormalCode(section) {\n    let code = new Code();\n\n    code.append(`\n      result.value = this.formatAsDateTimeNormal(n, {0});\n    `, section);\n\n    return code.toString();\n  }\n\n  createDateTimeCode(section) {\n    let code = new Code();\n    let elapsed = false;\n\n    section = section.replace(/\\[(h+?|m+?|s+?|y+?|d+?)]/ig, (a, m1)=> {\n      elapsed = true;\n      return m1;\n    });\n\n    let dateTimeCode = elapsed ?\n                       this.createDateTimeElapsedCode(section) :\n                       this.createDateTimeNormalCode(section);\n\n    code.append(`\n      n = this.createDate(n);\n      if (!isNaN(n.getTime())) {\n        ${dateTimeCode}\n      }\n    `);\n\n    return code.toString();\n  }\n\n  createSectionCode(section, sectionIndex, sectionsCount) {\n    // Start creating code for function\n    let code = new Code();\n\n    let condition;\n    let shouldAbsNumber = false;\n\n    // Find condition for sector or add standard sector condition (positive number, negative number, etc.)\n    let conditionMatch = section.match(/\\[((?:>|>=|<|<=|=|<>)[0-9\\.]+?)]/);\n\n    switch(true) {\n\n      // Found condition\n      case !!conditionMatch:\n        let cond = conditionMatch[1]\n          .replace(/<>/, '!=')\n          .replace('/=/', '==');\n        condition = `type == \"Number\" && parseFloat(n)${cond}`;\n        break;\n\n      // Standard condition for first section of 3+\n      case sectionIndex === 0 && sectionsCount > 2:\n        condition = `type == \"Number\" && parseFloat(n) > 0`;\n        break;\n\n      // Standard condition for first section of 2\n      case sectionIndex === 0 && sectionsCount === 2:\n        condition = `type == \"Number\" && parseFloat(n) >= 0`;\n        break;\n\n      // Standard condition for negative number\n      case sectionIndex === 1:\n        condition = `type == \"Number\" && parseFloat(n) < 0`;\n        shouldAbsNumber = true;\n        break;\n\n    }\n\n    // Find text color\n    section = section.replace(/\\[(Red|Green|White|Blue|Magenta|Yellow|Cyan|Black)]/gi, (a, m1)=> {\n      code.append(`\n        result.color = {0};\n      `, m1);\n      return '';\n    });\n\n    // Remove all [], except our replacements and elapsed days, hours, minutes, seconds\n    section = section.replace(/(\\[((?!((\\$*?)|(d*?)|(h*?)|(m*?)|(s*?))]).*?)])/, '');\n\n    // Format code\n    let formatCode = new Code();\n\n    // Defaults\n    formatCode.append(`\n      result.value = {0};\n      result.pattern = {0};\n    `, section);\n\n    switch (true) {\n\n      // General format\n      case /General/i.test(section):\n        formatCode.append(this.createGeneralCode(section));\n        break;\n\n      // Text\n      case /@/.test(section):\n        formatCode.append(this.createTextCode(section));\n        break;\n\n      // Number\n      case /#|\\?|0/.test(section):\n        if (!condition) {\n          condition = 'type === \"Number\"';\n        }\n        formatCode.append(this.createNumberCode(section, shouldAbsNumber));\n        break;\n\n      // DateTime\n      case /h|m|s|y|d/i.test(section):\n        if (!condition) {\n          condition = 'type === \"DateTime\"';\n        }\n        formatCode.append(this.createDateTimeCode(section));\n        break;\n\n    }\n\n    // Add return statement\n    formatCode.append(`\n      return makeResult.call(this);\n    `);\n\n    // Build final section code\n    if (condition) {\n      code.append(`\n        // Section\n        if (${condition}) {\n          ${formatCode}\n        }\n        // End section\n      `);\n    }\n    else {\n      code.append(`\n        // Section\n        ${formatCode}\n        // End section\n      `);\n    }\n\n    return code.toString();\n  }\n\n  createPatternCode(pattern) {\n    let origins = [];\n    let replaces = '';\n\n    // Find quotes, slash symbols\n    let patternReplaced = pattern.replace(/\"([^\"]+)\"|\\\\(.?)|(_.?)|(\\*.?)|(\")/g, function(a, m1, m2, m3) {\n      // Quote found\n      if (m1) {\n        origins.push(m1.replace(/(\"|'|\\\\)/g, \"\\\\$1\"));\n        return `[${(replaces += '$')}]`;\n      }\n      // Slash found\n      if (m2) {\n        origins.push(m2.replace(/(\"|'|\\\\)/g, \"\\\\$1\"));\n        return `[${(replaces += '$')}]`\n      }\n      // Space found\n      if (m3) {\n        origins.push(' ');\n        return `[${(replaces += '$')}]`;\n      }\n      return '';\n    });\n\n    // Split pattern to sections\n    let sections = patternReplaced.split(/;/);\n\n    // Init code\n    let code = new Code();\n\n    // Start variables\n    code.append(`\n      var result = {\n        value: \"\",\n        align: type === \"Number\" || type === \"DateTime\" ? \"right\" : \"\",\n        color: \"\",\n        pattern: \"\"\n      };\n\n      function makeResult() {\n        var origins = {0};\n        result.value = this.restoreOrigins(result.value, origins);\n        result.pattern = this.restoreOrigins(result.pattern, origins);\n        return result;\n      };\n    `, origins);\n\n    // Remove unnesessary sections\n    sections = sections.slice(0, 4);\n\n    // Loop trough sections\n    sections.forEach((section, sectionIndex)=>\n      code.append(this.createSectionCode(section, sectionIndex, sections.length))\n    );\n\n    // Return statement\n    code.append(`\n      result.value = {0};\n      result.pattern = {0};\n      return makeResult.call(this);\n    `, patternReplaced);\n\n    return code.toString();\n  }\n\n  format(n, type, pattern) {\n    this.log(`Input:`);\n    this.log(`n = ${n}, type = ${type}, pattern = ${pattern}`);\n\n    n = n.toString();\n    pattern = pattern.toString();\n\n    // Find predefined format\n    if (this.locale.formats[pattern]) {\n      pattern = this.locale.formats[pattern];\n    }\n\n    // Create function\n    if (!this.memoized[pattern]) {\n      let code = this.createPatternCode(pattern);\n\n      // Transform code\n      code = this.transformCode(code);\n\n      // Memoize function\n      this.memoized[pattern] = Function('n', 'type', code);\n\n      // Log code\n      this.log('Code:');\n      this.log(code);\n    }\n\n    // Call function\n    const result = this.memoized[pattern].call(this, n, type);\n\n    // Log result\n    this.log('Result:');\n    this.log(result);\n\n    return result;\n  }\n\n};\n\n// Create instance\nconst dataFormatter = new DataFormatter();\n\n// Add AMD support\nif (typeof define === 'function' && define.amd) {\n  define('dataFormatter', ()=> dataFormatter);\n  define('DataFormatter', ()=> DataFormatter);\n}\n// CommonJS\nelse if (typeof module === 'object' && module.exports) {\n  module.exports = dataFormatter;\n  module.exports.DataFormatter = DataFormatter;\n}\n// Window\nelse {\n  global.dataFormatter = dataFormatter;\n  global.DataFormatter = DataFormatter;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Format string like sprintf() in PHP\n */\nexport function formatString(s, ...args) {\n  return s.replace(/{(\\d+)}/g, (match, number)=>\n    typeof args[number] != 'undefined' ? args[number] : match\n  );\n};\n\n/**\n * Class for building code\n */\nexport class Code {\n\n  constructor() {\n    this.code = '';\n  }\n\n  makeString(s, ...values) {\n    values = values.map(JSON.stringify);\n    return formatString(s, ...values);\n  }\n\n  append() {\n    this.code += this.makeString(...arguments);\n  }\n\n  toString() {\n    return this.code;\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","var map = {\n\t\"./en-US.js\": 4,\n\t\"./ru.js\": 5\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/locales ^\\.\\/.*\\.js$\n ** module id = 3\n ** module chunks = 0\n **/","export default {\n  months: ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'],\n  monthsShort: ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'],\n  days: ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'],\n  daysShort: ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'],\n  thousandSeparator: ' ',\n  decimalSeparator: ',',\n  formats: {\n    'General Number': '#.#',\n    'Currency': '$ #,##0.00;[Red]$ -#,##0.00',\n    'Fixed': '0.00',\n    'Standard': '#,##0.00',\n    'Percent': '0.00%',\n    'Scientific': '0.00E+00',\n    'Yes/No': '\"Yes\";\"Yes\";\"No\"',\n    'True/False': '\"True\";\"True\";\"False\"',\n    'On/Off': '\"On\";\"On\";\"Off\"',\n    'Short Date': 'mm.dd.yyyy',\n    'Long Date': 'dd mmmm yyyy',\n    'General Date': 'mm.dd.yyyy h:mm',\n    'Medium Date': 'dd.mmm.yy',\n    'Long Time': 'hh:mm:ss AM/PM',\n    'Short Time': 'h:mm',\n    'Medium Time': 'hh:mm AM/PM'\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/locales/en-US.js\n **/","export default {\n  months: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\n  monthsShort: ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n  days: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\n  daysShort: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  thousandSeparator: ' ',\n  decimalSeparator: ',',\n  formats: {\n    'General Number': '#.#',\n    'Currency': '#,##0.00р.;[Red]-#,##0.00р.',\n    'Fixed': '0.00',\n    'Standard': '#,##0.00',\n    'Percent': '0.00%',\n    'Scientific': '0.00E+00',\n    'Yes/No': '\"Да\";\"Да\";\"Нет\"',\n    'True/False': '\"Истина\";\"Истина\";\"Ложь\"',\n    'On/Off': '\"Вкл\";\"Вкл\";\"Выкл\"',\n    'Short Date': 'mm.dd.yyyy',\n    'Long Date': 'dd mmmm yyyy',\n    'General Date': 'mm.dd.yyyy h:mm',\n    'Medium Date': 'dd.mmm.yy',\n    'Long Time': 'hh:mm:ss AM/PM',\n    'Short Time': 'h:mm',\n    'Medium Time': 'hh:mm AM/PM'\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/locales/ru.js\n **/"],"sourceRoot":""}